version: "3"
services:
  backend:
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - django_media:/home/muhal-backend/muhal/media
    #   - ${PWD}/backend/data/muhal_data.sqlite3:/home/muhal-backend/muhal/muhal/muhal_data.sqlite3
    command: ./start.sh
    expose:
      - "8000"
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.backend=backend
      - traefik.docker.network=private
      - traefik.port=8000
      - traefik.http.routers.api.rule=Host(`${PROJECT_URL}`) && PathPrefix(`/api`, `/admin`, `/static`, `/{locale:[a-z]{2}}/admin`)
      - traefik.http.routers.api.entrypoints=web-secure
      - traefik.http.routers.api.tls.certResolver=leresolver
      - traefik.http.services.api.loadbalancer.server.port=8000
      # Middlewares
      - "traefik.http.routers.api.middlewares=api-secure@docker"
      - "traefik.http.middlewares.api-secure.headers.framedeny=true"
      - "traefik.http.middlewares.api-secure.headers.sslredirect=true"
      - "traefik.http.middlewares.api-secure.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.api-secure.headers.stsPreload=true"
      - "traefik.http.middlewares.api-secure.headers.stsSeconds=15552000"
      - "traefik.http.middlewares.api-secure.headers.contentSecurityPolicy=upgrade-insecure-requests"
    networks:
      - private

  client:
    restart: unless-stopped
    build:
      context: ./client
      dockerfile: Dockerfile
    expose:
      - "3000"
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.backend=client
      - traefik.docker.network=private
      - traefik.port=3000
      - traefik.http.routers.client.rule=Host(`${PROJECT_URL}`) && PathPrefix(`/{locale:[a-z]{2}}/`, `/_nuxt/`, `/cases`) || Path(`/`)
      - traefik.http.routers.client.tls.certResolver=leresolver
      - traefik.http.routers.client.entrypoints=web-secure
      - traefik.http.services.client.loadbalancer.server.port=3000
      # Middlewares
      - "traefik.http.routers.client.middlewares=client-secure@docker"
      - "traefik.http.middlewares.client-secure.headers.framedeny=true"
      - "traefik.http.middlewares.client-secure.headers.sslredirect=true"
      - "traefik.http.middlewares.client-secure.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.client-secure.headers.stsPreload=true"
      - "traefik.http.middlewares.client-secure.headers.stsSeconds=15552000"
      - "traefik.http.middlewares.client-secure.headers.contentSecurityPolicy=upgrade-insecure-requests"
    networks:
      - private

  media:
    restart: unless-stopped
    image: nginx:1-alpine
    expose:
      - "80"
    volumes:
      - django_media:/usr/share/nginx/html/media:ro
    labels:
      - traefik.enable=true
      - traefik.backend=media
      - traefik.docker.network=private
      - traefik.port=80
      - traefik.http.routers.media.rule=Host(`${PROJECT_URL}`) && PathPrefix(`/media`)
    networks:
      - private

  traefik:
    image: traefik:2.2
    container_name: traefik
    restart: always
    hostname: traefik
    security_opt:
      - no-new-privileges:false
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/traefik.yml:/traefik.yml:ro"
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`${PROJECT_URL}`)
    networks:
      - private
      - web
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    depends_on:
      - backend
      - client
      - media

networks:
  private:
    external: false
  web:
    external: true

volumes: 
  django_media: